#@since 1.9.1
=class Encoding
文字エンコーディング(文字符号化方式)のクラスです。Rubyの多言語対応(M17N)機能において利用されます。

例えば文字列オブジェクトは、文字列のバイト表現の他にそのバイト表現がどのエンコーディングによるものであるかも併せて保持しています。この情報は [[m:String#encoding]] により取得できます。 Encoding オブジェクトを返すメソッドにはこの他に [[m:IO#internal_encoding]], [[m:IO#external_encoding]] などがあります。

@see [[d:spec/m17n]]

== Class Methods

--- aliases    -> Hash
エンコーディングの別名に対して元の名前を対応づけるハッシュを返します。

例:
  p Encoding.aliases
  #=> {"BINARY"=>"ASCII-8BIT", "ASCII"=>"US-ASCII", "ANSI_X3.4-1986"=>"US-ASCII",
      "SJIS"=>"Shift_JIS", "eucJP"=>"EUC-JP", "CP932"=>"Windows-31J"}

--- compatible?(obj1, obj2) -> Encoding | nil
2つのオブジェクトのエンコーディングに関する互換性をチェックします。
互換性がある場合はそのエンコーディングを、
ない場合は nil を返します。

引数が両方とも文字列である場合、互換性があるならば
その文字列を結合できます。この場合返り値のエンコーディングは
結合した文字列が取るであろう Encoding オブジェクトを返します。

  Encoding.compatible?("\xa1".force_encoding("iso-8859-1"), "b")
  #=> #<Encoding:ISO-8859-1>
  
  Encoding.compatible?(
    "\xa1".force_encoding("iso-8859-1"),
    "\xa1\xa1".force_encoding("euc-jp"))
  #=> nil

引数が文字列でない場合でも、両方のオブジェクトが encoding を持つ場合には
互換性を判定することができます。
  Encoding.compatible?(Encoding::UTF_8, Encoding::CP932)
  # => nil
  Encoding.compatible?(Encoding::UTF_8, Encoding::US_ASCII)
  # => #<Encoding:UTF-8>
@param obj1 チェック対象のオブジェクト
@param obj2 チェック対象のオブジェクト

--- find(name) -> Encoding
指定された name という名前を持つ Encoding オブジェクトを返します。

@param name エンコーディング名を表す [[c:String]] か [[c:Symbol]] を指定します。
@return 発見された Encoding オブジェクトを返します。
@raise ArgumentError 指定した名前のエンコーディングが発見できないと発生します。

#@since 1.9.2
特殊なエンコーディング名として、ロケールエンコーディングを表す locale、default_external を表す external、default_internal を表す internal、ファイルシステムエンコーディングを表す filesystem があります。
#@else
特殊なエンコーディング名として、ロケールエンコーディングを表す locale、default_external を表す external、default_internal を表す internal があります。
#@end

例:
 p Encoding.find(:Shift_JIS)    #=> #<Encoding:Shift_JIS>
 p Encoding.find("utf-8")       #=> #<Encoding:UTF-8>


--- list -> [Encoding]
現在ロードされているエンコーディングのリストを返します。

例:
    Encoding.list
    => [#<Encoding:ASCII-8BIT>, #<Encoding:EUC-JP>,
        #<Encoding:Shift_JIS>, #<Encoding:UTF-8>,
        #<Encoding:ISO-2022-JP (dummy)>]
    
    Encoding.find("US-ASCII")
    => #<Encoding:US-ASCII>
    
    Encoding.list
    => [#<Encoding:ASCII-8BIT>, #<Encoding:EUC-JP>,
        #<Encoding:Shift_JIS>, #<Encoding:UTF-8>,
        #<Encoding:US-ASCII>, #<Encoding:ISO-2022-JP (dummy)>]

--- name_list    -> [String]
利用可能なエンコーディングの名前を文字列の配列で返します。

例:
  p Encoding.name_list
  #=> ["US-ASCII", "ASCII-8BIT", "UTF-8",
       "ISO-8859-1", "Shift_JIS", "EUC-JP",
       "Windows-31J",
       "BINARY", "CP932", "eucJP", ...]

--- default_external -> Encoding
規定の外部エンコーディングを返します。

入出力において、外部エンコーディングが指定されていない場合の規定値として利用されます。Rubyはロケールまたは -E オプションに従って default_external を決定します。ロケールの確認・設定方法については各システムのマニュアルを参照してください。

default_external は必ず設定されます。[[m:Encoding.locale_charmap]] が nil を返す場合には US-ASCII が、
ロケールにRubyが扱えないエンコーディングが指定されている場合には ASCII-8BIT が、default_external に設定されます。

@see [[man:locale(1)]], [[m:Encoding.locale_charmap]]

--- default_external=(encoding)
規定の外部エンコーディングを設定します。

--- default_internal -> Encoding | nil
規定の内部エンコーディングを返します。

--- default_internal=(encoding)
規定の内部エンコーディングを設定します。

--- locale_charmap -> String | nil
ロケールエンコーディングを決定するために用いる、locale charmap 名を返します。nl_langinfo 等がない環境では nil を、miniruby では ASCII_8BIT を返します。

  Debian GNU/Linux
    LANG=C
      Encoding.locale_charmap  => "ANSI_X3.4-1968" 
  LANG=ja_JP.EUC-JP
      Encoding.locale_charmap  => "EUC-JP"

  SunOS 5
    LANG=C
      Encoding.locale_charmap  => "646"
    LANG=ja
      Encoding.locale_charmap  => "eucJP"

@see [[man:charmap(5)]]

== Instance Methods

--- inspect -> String
プログラマにわかりやすい表現の文字列を返します。

例:
    Encoding::UTF_8.inspect       #=> "#<Encoding:UTF-8>"
    Encoding::ISO_2022_JP.inspect #=> "#<Encoding:ISO-2022-JP (dummy)>"

--- name -> String
--- to_s -> String
エンコーディングの名前を返します。

    Encoding::UTF_8.name       => "UTF-8"

--- names -> String
エンコーディングの名前とエイリアス名の配列を返します。

    Encoding::UTF_8.names      => ["UTF-8", "CP65001"]

--- dummy? -> bool
自身がダミーエンコーディングである場合に true を返します。
そうでない場合に false を返します。

ダミーエンコーディングとは Ruby が名前を知っているものの実質的には対応していないエンコーディングのことです。例えば、ダミーエンコーディングで符号化された文字列の場合、 [[m:String#length]] はマルチバイト文字を考慮せずにバイト列の長さを返します。

ダミーエンコーディングも [[c:IO]] の外部エンコーディングに指定できます。また 
Ruby はサポートしていないが拡張ライブラリがサポートしているエンコーディングを扱う場合にも
用います。

例:
  Encoding::ISO_2022_JP.dummy?       #=> true
  Encoding::UTF_8.dummy?             #=> false

#@since 1.9.2
--- ascii_compatible? -> bool

自身が ASCII 互換のエンコーディングである場合真返します。
そうでない場合は偽を返します。


例:
  Encoding::UTF_8.ascii_compatible?     #=> true
  Encoding::UTF_16BE.ascii_compatible?  #=> false

--- replicate(name) -> Encoding

レシーバのエンコーディングを複製(replicate)します。
複製されたエンコーディングは元のエンコーディングと同じバイト構造を持たなければなりません。
name という名前のエンコーディングが既に存在する場合は [[c:ArgumentError]] を発生します。

#@end
== Constants

--- ASCII_8BIT -> Encoding
--- BINARY -> Encoding
ASCII-8BIT、ASCII互換オクテット列用のエンコーディングです。

もっぱら文字エンコーディングを持たないデータ、文字を符号化したのではない単なるバイトの列を表現するために用いますが、このエンコーディングは ASCII 互換であることがポイントです。

--- EUC_JP -> Encoding
--- EucJP -> Encoding
--- EUCJP -> Encoding
IANA Character Sets にある EUC-JP のことです。

日本語 EUC 亜種で、G0 が US-ASCII、G1 が JIS X 0201 片仮名図形文字集合、G2 が JIS X 0208、G3 が JIS X 0212 となっています。
EUC-JP を指定する場合は、それが実際には CP51932 のことである可能性を考えなければなりません。

--- ISO_2022_JP -> Encoding
--- ISO2022_JP -> Encoding
ISO 2022-JP エンコーディングです。

@see [[url:http://tools.ietf.org/html/rfc1468]]

--- Shift_JIS -> Encoding
--- SHIFT_JIS -> Encoding
--- SJIS -> Encoding
IANA Character Sets にある Shift_JIS のことです。

基本的にはJIS X 0208:1997の付属書1にある「シフト符号化表現」のことですが、
Ruby M17N では 7bit 部分が US-ASCII になっています。

--- US_ASCII -> Encoding
--- ASCII -> Encoding
--- ANSI_X3_4_1968 -> Encoding
US-ASCII、いわゆる ASCII のことで、ISO 646 IRV と一致します。

7bit の範囲のみを含み、8bit 目の立っている文字 (たとえば \x80 など) が含まれる場合は正しいエンコーディングであるとみなしません。

#@since 1.9.3
--- UTF_16
UTF-16 (BOMを含む) です。

ダミーエンコーディングです。

--- UTF_32
UTF-32 (BOMを含む) です。

ダミーエンコーディングです。
#@end

--- UTF_16BE -> Encoding
--- UCS_2BE -> Encoding
UTF-16BE (ビッグエンディアン) です。

BOM を含みません。

--- UTF_16LE -> Encoding
UTF-16LE (リトルエンディアン) です。

BOM を含みません。

--- UTF_32BE -> Encoding
--- UCS_4BE -> Encoding
UTF-32BE (ビッグエンディアン) です。

BOM を含みません。

--- UTF_32LE -> Encoding
--- UCS_4LE -> Encoding
UTF-32LE (リトルエンディアン) です。

BOM を含みません。

--- UTF_8 -> Encoding
--- CP65001 -> Encoding
UTF-8、Unicode や ISO 10646 を ASCII 互換な形で符号化するための方式です。

BOM を含みません。

@see [[url:http://tools.ietf.org/html/rfc3629]]


--- UTF8_MAC -> Encoding
--- UTF_8_MAC -> Encoding
#@since 1.9.2
--- UTF_8_HFS -> Encoding
#@end
UTF8-MAC、アップルによって修正された Normalization Form D（分解済み）という形式のUTF-8です。

@see [[url:http://developer.apple.com/jp/technotes/tn1150.html]],
     [[url:http://developer.apple.com/jp/technotes/tn2078.html]]

--- UTF_7 -> Encoding
--- CP65000 -> Encoding

UTF-7 です。

7ビットの範囲内で表現される、Unicode のエンコーディングの一種です。
ダミーエンコーディングです。


--- Big5 -> Encoding
--- BIG5 -> Encoding

Big5 エンコーディングです。

台湾で使われている繁体字中国語のエンコーディングです。

@see [[url:http://en.wikipedia.org/wiki/Big5]]

--- CP950 -> Encoding

CP950 エンコーディングです。

Windows で使われる Big5 の亜種です。

@see [[url:http://msdn.microsoft.com/en-us/goglobal/cc305155.aspx]]

#@since 1.9.2
--- Big5_HKSCS -> Encoding
--- BIG5_HKSCS -> Encoding
#@since 1.9.3
--- BIG5_HKSCS_2008 -> Encoding
--- Big5_HKSCS_2008 -> Encoding
#@end

Big5-HKSCS エンコーディングです。

香港で使われている Big5 の亜種です。

@see [[url:http://www.iana.org/assignments/charset-reg/Big5-HKSCS]],
     [[url:http://www.ogcio.gov.hk/ccli/eng/hkscs/mapping_table_2008.html]]


--- CP951 -> Encoding
CP951 エンコーディングです。

Windows で使われる Big5-HKSCS の亜種です。

@see [[url:http://www.microsoft.com/hk/hkscs/default.aspx]],
     [[url:http://www.microsoft.com/downloads/en/details.aspx?FamilyID=0e6f5ac8-7baa-4571-b8e8-78b3b776afd7&DisplayLang=en]],
     [[url:http://blogs.msdn.com/b/shawnste/archive/2007/03/12/cp-951-hkscs.aspx]]


--- BIG5_UAO -> Encoding
--- Big5_UAO -> Encoding
Big5_UAO エンコーディングです。

Big5 の亜種(非公式的拡張)です。

Unicodeとの対応表が
[[url:http://moztw.org/docs/big5/table/big5_2003-b2u.txt]]
にあります。
#@end


--- CP51932 -> Encoding
Windows で用いられる、日本語 EUC 亜種です。

G0 が US-ASCII、G1 が JIS X 0201 片仮名図形文字集合、G2 が JIS X 0208 + Windows の機種依存文字となっており、G3 は未割り当てになっています。

@see [[url:http://legacy-encoding.sourceforge.jp/wiki/index.php?cp51932]]

#@since 1.9.2
--- CP50220 -> Encoding
CP50220 エンコーディング、
Windows で用いられる ISO-2022-JP 亜種です。

CP50221 とほぼ同様のエンコーディングですが、
他のエンコーディングへの変換テーブルが少し異なります。

@see [[url:http://legacy-encoding.sourceforge.jp/wiki/index.php?cp50220]]


--- CP50221 -> Encoding
Windows で用いられる、ISO-2022-JP 亜種です。

ISO-2022-JP に加え、ESC ( I でいわゆる半角カナを許し、Windows の機種依存文字を扱うことができます。

@see [[url:http://legacy-encoding.sourceforge.jp/wiki/index.php?cp50221]]
#@end


--- EUC_CN -> Encoding
--- EUCCN -> Encoding
--- EucCN -> Encoding
ENC-CN エンコーディングです。

中国で用いられる簡体字中国語 EUCのエンコーディングです。
GB2312 と呼ばれることも多いです。

--- EUC_KR -> Encoding
--- EUCKR -> Encoding
--- EucKR -> Encoding

EUC-KR エンコーディングです。

韓国語 EUC のエンコーディングです。

--- EUC_TW -> Encoding
--- EUCTW -> Encoding
--- EucTW -> Encoding

EUC-TW エンコーディングです。

台湾で用いられる繁体字中国語 EUCのエンコーディングです。

--- GB18030 -> Encoding
GBK エンコーディング

中国で用いられる中国語のエンコーディングです。

@see [[url:http://www.iana.org/assignments/charset-reg/GB18030]]

--- GB1988 -> Encoding

CB1988 エンコーディング。

ISO/IEC 646 の中国版です。

--- GBK -> Encoding
--- CP936 -> Encoding

GBK エンコーディング

中国で用いられる簡体字中国語のエンコーディングです。

@see [[url:http://www.iana.org/assignments/character-sets]],
     [[url:http://www.iana.org/assignments/charset-reg/GBK]],
     [[url:http://www.microsoft.com/globaldev/reference/dbcs/936.mspx]]


#@# --- WINDOWS_936
#@# --- Windows_936

--- GB12345 -> Encoding

GB 12345 エンコーディング。

GB 2312 から派生したもので、繁体字中国語を取り扱うエンコーディングです。


--- IBM437 -> Encoding
--- CP437 -> Encoding

CP437 エンコーディング。

@see [[url:http://en.wikipedia.org/wiki/Code_page_437]],
     [[m:Encoding::CP869]]


--- IBM737 -> Encoding
--- CP737 -> Encoding

CP437 エンコーディング。

ギリシャ語を取り扱う 8bit single-byteエンコーディングです。

@see [[url:http://en.wikipedia.org/wiki/Code_page_737]]


--- IBM775 -> Encoding
--- CP775 -> Encoding
CP775 エンコーディング。

バルト語派の言語を扱うための 8bit single-byteエンコーディングです。

@see [[url:http://en.wikipedia.org/wiki/Code_page_775]]

--- CP850 -> Encoding
--- IBM850 -> Encoding

CP850 エンコーディング。

@see [[url:http://en.wikipedia.org/wiki/Code_page_850]]

--- IBM852 -> Encoding
--- CP852 -> Encoding

CP852 エンコーディング。

ラテンアルファベットを用いる中欧の言語のための
8bit single-byte エンコーディングです。

@see [[url:http://en.wikipedia.org/wiki/Code_page_852]]

--- IBM855 -> Encoding
--- CP855 -> Encoding

CP855 エンコーディング。

キリル文字を用いる言語のための
8bit single-byte エンコーディングです。

@see [[url:http://en.wikipedia.org/wiki/Code_page_855]]

--- IBM857 -> Encoding
--- CP857 -> Encoding

CP857 エンコーディング。

トルコ語に用いられる、
8bit single-byte エンコーディングです。

@see [[url:http://en.wikipedia.org/wiki/Code_page_857]]

--- IBM860 -> Encoding
--- CP860 -> Encoding

CP860 エンコーディング。

ポルトガル語に用いられる、
8bit single-byte エンコーディングです。

@see [[url:http://en.wikipedia.org/wiki/Code_page_860]]


--- IBM861 -> Encoding
--- CP861 -> Encoding
CP861 エンコーディング。

アイスランド語に用いられる、
8bit single-byte エンコーディングです。

@see [[url:http://en.wikipedia.org/wiki/Code_page_861]]


--- IBM862 -> Encoding
--- CP862 -> Encoding
CP862 エンコーディング。

ヘブライ語に用いられる、
8bit single-byte エンコーディングです。

@see [[url:http://en.wikipedia.org/wiki/Code_page_861]]

--- IBM863 -> Encoding
--- CP863 -> Encoding
CP863 エンコーディング。

フランス語に用いられる、
8bit single-byte エンコーディングです。

@see [[url:http://en.wikipedia.org/wiki/Code_page_863]]

--- IBM864 -> Encoding
--- CP864 -> Encoding
CP864 エンコーディング。

アラビア語に用いられる、
8bit single-byte エンコーディングです。

@see [[url:http://en.wikipedia.org/wiki/Code_page_864]]


--- IBM865 -> Encoding
--- CP865 -> Encoding
CP865 エンコーディング。

北欧の諸言語に用いられる、
8bit single-byte エンコーディングです。

@see [[url:http://en.wikipedia.org/wiki/Code_page_865]]

--- IBM866 -> Encoding
--- CP866 -> Encoding
CP866 エンコーディング。

キリル文字を使う諸言語に用いられる、
8bit single-byte エンコーディングです。

@see [[url:http://en.wikipedia.org/wiki/Code_page_866]]

--- IBM869 -> Encoding
--- CP869 -> Encoding

CP869 エンコーディング。

ギリシャ語を取り扱う 8bit single-byteエンコーディングです。

@see [[url:http://en.wikipedia.org/wiki/Code_page_869]],
     [[m:Encoding::CP737]]

--- CP949 -> Encoding

CP949 エンコーディング。

EUC-KR に近い、韓国語を取り扱う multi-byte エンコーディングです。

@see [[m:Encoding::EUC_KR]],
     [[url:http://www.microsoft.com/globaldev/reference/dbcs/949.mspx]],
     [[url:http://en.wikipedia.org/wiki/EUC-KR#EUC-KR]],

--- ISO_2022_JP_2 -> Encoding
--- ISO2022_JP2 -> Encoding

ISO-2022-JP-2 エンコーディングです。

ISO-2022-JP の拡張版です。

@see [[m:Encoding::ISO_2022_JP]]

--- ISO_8859_1 -> Encoding
--- ISO8859_1 -> Encoding

ISO-8859-1 エンコーディングです。

多くの西欧言語を含むさまざまなラテン文字言語を表現するための 
8bitエンコーディングです。

Latin-1 とも呼ばれます。



--- ISO_8859_2 -> Encoding
--- ISO8859_2 -> Encoding

ISO8859-2 エンコーディング。

中東欧の言語を扱う 8bit single-byte エンコーディングです。



--- ISO_8859_3 -> Encoding
--- ISO8859_3 -> Encoding
ISO8859-3 エンコーディング。

トルコ語、マルタ語、エスペラントを扱う 8bit single-byte エンコーディングです。



--- ISO_8859_4 -> Encoding
--- ISO8859_4 -> Encoding

ISO 8859-4 エンコーディング。

北欧の言語を扱う 8bit single-byte エンコーディングです。



--- ISO_8859_5 -> Encoding
--- ISO8859_5 -> Encoding

ISO 8859-5 エンコーディング。

キリル文字を用いる言語を扱う 8bit single-byte エンコーディングです。



--- ISO_8859_6 -> Encoding
--- ISO8859_6 -> Encoding

ISO8859-6 エンコーディング。

アラビア文字を扱う 8bit single-byte エンコーディングです。

@see [[m:Encoding::Windows_1256]]



--- ISO_8859_7 -> Encoding
--- ISO8859_7 -> Encoding

ISO8859-7 エンコーディング。

ギリシャ語を扱う 8bit single-byte エンコーディングです。

@see [[m:Encoding::Windows_1253]]



--- ISO_8859_8 -> Encoding
--- ISO8859_8 -> Encoding
ISO8859-8 エンコーディング。

ヘブライ語を扱う 8bit single-byte エンコーディングです。

@see [[m:Encoding::Windows_1255]]



--- ISO_8859_9 -> Encoding
--- ISO8859_9 -> Encoding

ISO8859-9 エンコーディング。

ISO8859-1 に近い、
トルコ語を扱うことができる8bit single-byteエンコーディングです。

@see [[m:Encoding::Windows_1254]]



--- ISO_8859_10 -> Encoding
--- ISO8859_10 -> Encoding

ISO 8859-10 エンコーディング。

北欧の言語を扱う 8bit single-byte エンコーディングです。



--- ISO_8859_11 -> Encoding
--- ISO8859_11 -> Encoding

ISO8859-11 エンコーディング。

タイ語を扱う 8bit single-byte エンコーディングです。

@see [[m:Encoding::TIS_620]]



--- ISO_8859_13 -> Encoding
--- ISO8859_13 -> Encoding

ISO8859-13 エンコーディング。

バルト語派の言語を扱う8bit single-byteエンコーディングです。

@see [[m:Encoding::Windows_1257]]



--- ISO_8859_14 -> Encoding
--- ISO8859_14 -> Encoding

ISO8859-14 エンコーディング。

ケルト語派の言語を扱う8bit single-byteエンコーディングです。

@see [[m:Encoding::Windows_1257]]



--- ISO_8859_15 -> Encoding
--- ISO8859_15 -> Encoding

ISO 8859-15 エンコーディング。

ISO 8859-1 の改訂版です。


--- ISO_8859_16 -> Encoding
--- ISO8859_16 -> Encoding

ISO 8859-16 エンコーディング。

東欧を中心とした地域の諸語を扱う 8bit single-byte エンコーディングです。

--- KOI8_R -> Encoding
--- CP878 -> Encoding

KOI8-R エンコーディング。

ロシア語のキリル文字で使われる8bit single-byteエンコーディングです。

@see [[url:http://en.wikipedia.org/wiki/KOI8-R]]



--- KOI8_U -> Encoding

KOI8-U エンコーディング。

ウクライナ語のキリル文字で使われる8bit single-byteエンコーディングです。

@see [[url:http://en.wikipedia.org/wiki/KOI8-U]]



--- MacJapanese -> Encoding
--- MACJAPAN -> Encoding
--- MACJAPANESE -> Encoding
--- MacJapan -> Encoding

MacJapanese エンコーディング。

Mac OS の 9.x までで用いられていた Shift_JIS 亜種です。

@see [[url:http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/JAPANESE.TXT]],
     [[url:http://ja.wikipedia.org/wiki/MacJapanese]]


#@since 1.9.2
--- SJIS_DOCOMO -> Encoding
--- SJIS_DoCoMo -> Encoding

SJIS-DoCoMo エンコーディングです。

Shift_JIS, CP932 の亜種です。
DoCoMo の携帯電話で使われる絵文字が含まれています。

@see [[url:http://www.nttdocomo.co.jp/english/service/imode/make/content/pictograph/basic/index.html]],
     [[url:http://www.nttdocomo.co.jp/english/service/imode/make/content/pictograph/extention/index.html]],


--- SJIS_KDDI -> Encoding

SJIS-KDDI エンコーディングです。

Shift_JIS, CP932 の亜種です。
KDDI の携帯電話で使われる絵文字が含まれています。

@see [[url:http://www.au.kddi.com/ezfactory/tec/spec/img/typeD.pdf]]



--- SJIS_SOFTBANK -> Encoding
--- SJIS_SoftBank -> Encoding
SJIS-SoftBank エンコーディングです。

Shift_JIS, CP932 の亜種です。
SoftBank の携帯電話で使われる絵文字が含まれています。

@see [[url:http://creation.mb.softbank.jp/web/web_pic_about.html]],
     [[url:http://www2.developers.softbankmobile.co.jp/dp/tool_dl/download.php?docid=120&companyid=]]


--- UTF8_DOCOMO -> Encoding
--- UTF8_DoCoMo -> Encoding
UTF8-DoCoMo エンコーディングです。

UTF-8 の亜種です。
DoCoMo の携帯電話で使われる絵文字が含まれています。


@see [[url:http://www.nttdocomo.co.jp/english/service/imode/make/content/pictograph/basic/index.html]],
     [[url:http://www.nttdocomo.co.jp/english/service/imode/make/content/pictograph/extention/index.html]],


--- UTF8_KDDI -> Encoding

UTF8-KDDI エンコーディングです。

UTF8 の亜種です。
KDDI の携帯電話で使われる絵文字が含まれています。


@see [[url:http://www.au.kddi.com/ezfactory/tec/spec/img/typeD.pdf]]

--- UTF8_SOFTBANK -> Encoding
--- UTF8_SoftBank -> Encoding
UTF8-SoftBank エンコーディングです。

UTF-8 の亜種です。
SoftBank の携帯電話で使われる絵文字が含まれています。


@see [[url:http://creation.mb.softbank.jp/web/web_pic_about.html]],
     [[url:http://www2.developers.softbankmobile.co.jp/dp/tool_dl/download.php?docid=120&companyid=]]


#@end

--- STATELESS_ISO_2022_JP -> Encoding
--- Stateless_ISO_2022_JP -> Encoding
stateless-ISO-2022-JP エンコーディングです。

ISO-2022-JPをステートレスに扱うための方式です。
Emacs-Mule エンコーディングを元にしています。

#@since 1.9.2
--- ISO_2022_JP_KDDI -> Encoding
ISO-2022-JP-KDDI エンコーディングです。

ISO-2022-JP の亜種です。
KDDI の携帯電話で使われる絵文字が含まれています。


@see [[url:http://www.au.kddi.com/ezfactory/tec/spec/img/typeD.pdf]]



--- STATELESS_ISO_2022_JP_KDDI -> Encoding
--- Stateless_ISO_2022_JP_KDDI -> Encoding
stateless-ISO-2022-JP-KDDI エンコーディングです。

stateless-ISO-2022-JP の亜種です。
KDDI の携帯電話で使われる絵文字が含まれています。


@see [[url:http://www.au.kddi.com/ezfactory/tec/spec/img/typeD.pdf]]


#@end

--- TIS_620 -> Encoding
TIS-620 エンコーディング。

タイ語を扱うためのエンコーディングで、 ISO8859-11 とほぼ
同一のエンコーディングです。

@see [[url:http://en.wikipedia.org/wiki/Thai_Industrial_Standard_620-2533]]



--- Windows_1250 -> Encoding
--- CP1250 -> Encoding
--- WINDOWS_1250 -> Encoding

Windows-1250 エンコーディング。

ISO8859-2 の亜種です。

@see [[url:http://www.microsoft.com/globaldev/reference/sbcs/1250.mspx]],
     [[url:http://en.wikipedia.org/wiki/Windows-1250]]

--- Windows_1251 -> Encoding
--- CP1251 -> Encoding
--- WINDOWS_1251 -> Encoding

Windows-1251 エンコーディング。

キリル文字を用いる言語を取り扱う8bit single-byteエンコーディングです。

@see [[url:http://www.iana.org/assignments/character-sets]],
     [[url:http://www.microsoft.com/globaldev/reference/sbcs/1251.mspx]],
     [[url:http://en.wikipedia.org/wiki/Windows-1251]]

--- Windows_1252 -> Encoding
--- CP1252 -> Encoding
--- WINDOWS_1252 -> Encoding

Windows-1252 エンコーディングです。

ISO8859-1 の亜種です。

@see [[m:Encoding::ISO_8859_1]]
     [[url:http://www.iana.org/assignments/character-sets]],
     [[url:http://www.microsoft.com/globaldev/reference/sbcs/1252.mspx]],
     [[url:http://en.wikipedia.org/wiki/Windows-1252]]


--- Windows_1253 -> Encoding
--- CP1253 -> Encoding
--- WINDOWS_1253 -> Encoding

Windows-1253 エンコーディング。

ISO8859-7 の亜種です。

@see [[m:Encoding::ISO_8859_7]],
     [[url:http://www.iana.org/assignments/character-sets]],
     [[url:http://www.microsoft.com/globaldev/reference/sbcs/1253.mspx]],
     [[url:http://en.wikipedia.org/wiki/Windows-1253]]

--- Windows_1254 -> Encoding
--- CP1254 -> Encoding
--- WINDOWS_1254 -> Encoding

Windows-1254 エンコーディング。

ISO8859-9 の亜種です。

@see [[m:Encoding::ISO_8859_9]],
     [[url:http://www.iana.org/assignments/character-sets]],
     [[url:http://www.microsoft.com/globaldev/reference/sbcs/1254.mspx]],
     [[url:http://en.wikipedia.org/wiki/Windows-1254]]

--- Windows_1255 -> Encoding
--- CP1255 -> Encoding
--- WINDOWS_1255 -> Encoding

Windows-1255 エンコーディング。

ISO8859-8 の亜種です。

@see [[m:Encoding::ISO_8859_8]],
     [[url:http://www.iana.org/assignments/character-sets]],
     [[url:http://www.microsoft.com/globaldev/reference/sbcs/1255.mspx]],
     [[url:http://en.wikipedia.org/wiki/Windows-1255]],
 

--- Windows_1256 -> Encoding
--- CP1256 -> Encoding
--- WINDOWS_1256 -> Encoding
Windows-1256 エンコーディング。

Windowsで用いられる、アラビア文字を扱う 8bit single-byte エンコーディングです。

@see [[m:Encoding::ISO_8859_6]],
     [[url:http://www.iana.org/assignments/character-sets]],
     [[url:http://www.microsoft.com/globaldev/reference/sbcs/1256.mspx]],
     [[url:http://en.wikipedia.org/wiki/Windows-1256]]


--- Windows_1257 -> Encoding
--- CP1257 -> Encoding
--- WINDOWS_1257 -> Encoding
Windows-1257 エンコーディング。

ISO8859-13 の亜種です。

@see [[m:Encoding::ISO8859_13]],
     [[url:http://www.iana.org/assignments/character-sets]],
     [[url:http://www.microsoft.com/globaldev/reference/sbcs/1257.mspx]],
     [[url:http://en.wikipedia.org/wiki/Windows-1257]],


--- Windows_1258 -> Encoding
--- CP1258 -> Encoding
--- WINDOWS_1258 -> Encoding

WINDOWS-1258 エンコーディング。

ベトナム語を扱う 8bit single-byteエンコーディングです。

@see [[url:http://en.wikipedia.org/wiki/Windows-1258]]

--- Windows_31J -> Encoding
--- CP932 -> Encoding
--- CSWINDOWS31J -> Encoding
--- CsWindows31J -> Encoding
--- WINDOWS_31J -> Encoding
#@since 1.9.3
--- PCK -> Encoding
#@end

Windows-31J、Windows で用いられる、シフトJIS亜種で、CP932とも言います。

7bit 部分が論理的には US-ASCIIであり、また Windows の機種依存文字を扱うことができます。

@see [[url:http://www2d.biglobe.ne.jp/~msyk/charcode/cp932/index.html]],
     [[url:http://legacy-encoding.sourceforge.jp/wiki/index.php?cp932]]

--- Windows_874 -> Encoding
--- CP874 -> Encoding
--- WINDOWS_874 -> Encoding

Windows-874 エンコーディング。

タイ語を扱うエンコーディングで、ISO8859-11の亜種です。


@see [[m:Encoding::TIS_620]], [[m:Encoding::ISO_8859_11]],
     [[url:http://www.microsoft.com/globaldev/reference/sbcs/874.mspx]]


--- EUCJP_MS -> Encoding
--- EucJP_ms -> Encoding
--- EUC_JP_MS -> Encoding
eucJP-ms、Unix 系で用いられる、日本語 EUC 亜種です。

EUC-JPに加え、Windowsの機種依存文字とユーザ定義文字を扱うことができます。
@see [[url:http://www2d.biglobe.ne.jp/~msyk/charcode/cp932/eucJP-ms.html]],
     [[url:http://legacy-encoding.sourceforge.jp/wiki/index.php?eucJP-ms]],
     [[url:http://blog.livedoor.jp/numa2666/archives/50980727.html]]

--- MacCentEuro -> Encoding
--- MACCENTEURO -> Encoding
MacCentEuro エンコーディング。

Mac OSで使われる
8bit single-byteエンコーディングで、
中欧および南東欧の言語を取り扱うものです。

@see [[url:http://en.wikipedia.org/wiki/Macintosh_Central_European_encoding]]

--- MacCroatian -> Encoding
--- MACCROATIAN -> Encoding
MacCroatian エンコーディング。

Mac OS で使われる
8bit single-byteエンコーディングで、
クロアチア語、スベロニア語を取り扱うものです。

@see [[url:http://www.unicode.org/Public/MAPPINGS/VENDORS/APPLE/CROATIAN.TXT]]

--- MacCyrillic -> Encoding
--- MACCYRILLIC -> Encoding

MacCyrillic エンコーディング。

Mac OS で使われる 8bit single-byte エンコーディングで、
キリル文字を取り扱うものです。

@see [[url:http://en.wikipedia.org/wiki/Macintosh_Cyrillic_encoding]]

--- MacGreek -> Encoding
--- MACGREEK -> Encoding
MacGreek エンコーディング。

Mac OSで使われる
8bit single-byte エンコーディングで、
ギリシャ語のために使われます。

@see [[url:http://www.unicode.org/Public/MAPPINGS/VENDORS/APPLE/GREEK.TXT]]

--- MacIceland -> Encoding
--- MACICELAND -> Encoding

MacIceland エンコーディング。

Mac OSで使われる
8bit single-byte エンコーディングで、
アイスランド語のために使われます

@see [[url:http://en.wikipedia.org/wiki/Mac_Icelandic_encoding]]

--- MacRoman -> Encoding
--- MACROMAN -> Encoding
MacRoman エンコーディング。

Mac OSで使われる
8bit single-byte エンコーディングで、
西欧を中心としたラテン文字を用いる諸語を取り扱うためのものです。

IANA character-sets で "macintosh" で表現されるものです。

@see [[url:http://en.wikipedia.org/wiki/Mac_OS_Roman]]

--- MacRomania -> Encoding
--- MACROMANIA -> Encoding
MacRoman エンコーディング。

Mac OSで使われる
8bit single-byte エンコーディングで、
ルーマニア語のために使われます。

@see [[url:http://www.unicode.org/Public/MAPPINGS/VENDORS/APPLE/ROMANIAN.TXT]]

--- MacThai -> Encoding
--- MACTHAI -> Encoding
MacThai エンコーディング。

タイ語を扱うエンコーディングで、ISO8859-11の亜種です。

@see [[m:Encoding::TIS_620]], [[m:Encoding::ISO_8859_11]]

--- MacTurkish -> Encoding
--- MACTURKISH -> Encoding
MacTurkish エンコーディング。

Mac OSで使われる
8bit single-byte エンコーディングで、
トルコ語のために使われます。

@see [[url:http://www.unicode.org/Public/MAPPINGS/VENDORS/APPLE/TURKISH.TXT]]

--- MacUkraine -> Encoding
--- MACUKRAINE -> Encoding
MacUkraine エンコーディング。

Mac OS で使われる、ウクライナ語キリル文字を取り扱うエンコーディング。
MacCyrillic の亜種です。

@see [[url:http://en.wikipedia.org/wiki/Macintosh_Ukrainian_encoding]]

--- EMACS_MULE -> Encoding
--- Emacs_Mule -> Encoding

Emacs-Mule エンコーディングです。

Emacsの多言語化(Mule)で使われているステートレスのエンコーディングです。

@see [[url:http://www.m17n.org/mule/pricai96/mule.en.html]]


= class EncodingError < StandardError
エンコーディング関連の例外の基底クラス。

= class Encoding::CompatibilityError < EncodingError
2つのエンコーディング間に互換性がない場合に発生する例外。

エンコーディングの異なる文字列を連結しようとした場合などに発生します。

  "あ".encode("EUC-JP") + "あ".encode("UTF-8")
  #=> Encoding::CompatibilityError: incompatible character encodings: EUC-JP and UTF-8

= class Encoding::UndefinedConversionError < EncodingError
エンコーディング変換後の文字が存在しない場合に発生する例外。

UTF-8 にしかない文字を EUC-JP に変換しようとした場合などに発生します。
  "\u2603".encode(Encoding::EUC_JP)
  #=> Encoding::UndefinedConversionError: U+2603 from UTF-8 to EUC-JP


変換が多段階でなされ、その途中で例外が生じた場合は、
例外オブジェクトが保持するエラー情報はその中間のものになります。
  ec = Encoding::Converter.new("ISO-8859-1", "EUC-JP") 
  # ISO-8859-1 -> UTF-8 -> EUC-JP
  begin
    ec.convert("\xa0") 
    # NO-BREAK SPACE, which is available in UTF-8 but not in EUC-JP.
  rescue Encoding::UndefinedConversionError
    p $!.source_encoding              #=> #<Encoding:UTF-8>
    p $!.destination_encoding         #=> #<Encoding:EUC-JP>
    p $!.source_encoding_name         #=> "UTF-8"
    p $!.destination_encoding_name    #=> "EUC-JP"
    puts $!.error_char.dump   #=> "\u{a0}" 
    p $!.error_char.encoding  #=> #<Encoding:UTF-8>
  end


== Instance Methods
--- destination_encoding -> Encoding
エラーを発生させた変換の変換先のエンコーディングを [[c:Encoding]]
オブジェクトで返します。

@see [[m:Encoding::UndefinedConversionError#source_encoding]]

--- destination_encoding_name -> String
エラーを発生させた変換の変換先のエンコーディングを文字列で返します。

@see [[m:Encoding::UndefinedConversionError#destination_encoding]]

--- error_char -> String
エラーを発生させた1文字を文字列で返します。

  ec = Encoding::Converter.new("UTF-8", "EUC-JP")
  begin
    ec.convert("\u{a0}") 
  rescue Encoding::UndefinedConversionError
    puts $!.error_char.dump   #=> "\u{a0}"
  end

--- source_encoding -> Encoding
エラーを発生させた変換の変換元のエンコーディングを [[c:Encoding]]
オブジェクトで返します。

変換が多段階になされる場合は元の文字列のものではない
エンコーディングが返される場合があることに注意してください。

@see [[m:Encoding::UndefinedConversionError#destination_encoding]]

--- source_encoding_name -> Encoding
エラーを発生させた変換の変換元のエンコーディングを文字列で返します。

@see [[m:Encoding::UndefinedConversionError#source_encoding]]

= class Encoding::InvalidByteSequenceError < EncodingError
文字列がそのエンコーディングにおいて不正なバイト列である場合に発生
する例外。

通常エンコーディング変換時に発生します。

  "\x82\xa0".force_encoding("cp932").encode("UTF-8")
  #=> "あ"
  "\x82\xa0".force_encoding("EUC-JP").encode("UTF-8")
  #=> Encoding::InvalidByteSequenceError: "\x82" on EUC-JP

== Instance Methods
--- destination_encoding -> Encoding
エラーを発生させた変換の変換先のエンコーディングを [[c:Encoding]]
オブジェクトで返します。

@see [[m:Encoding::InvalidByteSequenceError#source_encoding]],
     [[m:Encoding::UndefinedConversionError#destination_encoding]]

--- destination_encoding_name -> String
エラーを発生させた変換の変換先のエンコーディングを文字列で返します。

@see [[m:Encoding::InvalidByteSequenceError#destination_encoding]]

--- source_encoding -> Encoding
エラーを発生させた変換の変換元のエンコーディングを [[c:Encoding]]
オブジェクトで返します。

@see [[m:Encoding::InvalidByteSequenceError#destination_encoding]],
     [[m:Encoding::UndefinedConversionError#source_encoding]]

--- source_encoding_name -> Encoding
エラーを発生させた変換の変換元のエンコーディングを文字列で返します。

@see [[m:Encoding::InvalidByteSequenceError#source_encoding]]

--- error_bytes -> String
エラー発生時に捨てられたバイト列を返します。


  ec = Encoding::Converter.new("EUC-JP", "ISO-8859-1")
  begin
    ec.convert("abc\xA1\xFFdef")
  rescue Encoding::InvalidByteSequenceError
    p $!      
    #=> #<Encoding::InvalidByteSequenceError: "\xA1" followed by "\xFF" on EUC-JP>
    puts $!.error_bytes.dump          #=> "\xA1"
    puts $!.readagain_bytes.dump      #=> "\xFF"
  end

@see [[m:Encoding::InvalidByteSequenceError#readagain_bytes]]

--- readagain_bytes -> String
エラー発生時に読み直さなければならないバイト列を返します。

@see [[m:Encoding::InvalidByteSequenceError#error_bytes]]

--- incomplete_input? -> bool
エラー発生時に入力文字列が不足している場合に真を返します。

つまり、マルチバイト文字列の途中で文字列が終わっている場合に
真を返します。これは後続の入力を追加することでエラーが
解消する可能性があることを意味します。

  ec = Encoding::Converter.new("EUC-JP", "ISO-8859-1")

  begin
    ec.convert("abc\xA1z")
  rescue Encoding::InvalidByteSequenceError
    p $!
    #=> #<Encoding::InvalidByteSequenceError: "\xA1" followed by "z" on EUC-JP>
    p $!.incomplete_input?    #=> false
  end

  begin
    ec.convert("abc\xA1")
    ec.finish
  rescue Encoding::InvalidByteSequenceError
    p $! #=> #<Encoding::InvalidByteSequenceError: incomplete "\xA1" on EUC-JP>
    p $!.incomplete_input?    #=> true
  end

= class Encoding::ConverterNotFoundError < EncodingError
指定した名前のエンコーディング変換をする変換器が
存在しない場合に発生する例外。

  "あ".encode("Foo")
  #=> Encoding::ConverterNotFoundError: code converter not found (UTF-8 to Foo)

#@end
