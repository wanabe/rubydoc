#@until 1.8.7
= class OpenSSL::Digest::Digest < Object

ハッシュ関数のための抽象的なインターフェースを提供するクラスです。
[[lib:digest]] も参照してください。

実装されているクラスは以下の通りです。

  * OpenSSL::Digest::DSS1
  * OpenSSL::Digest::MD2
  * OpenSSL::Digest::MD4
  * OpenSSL::Digest::MD5
  * OpenSSL::Digest::MDC2
  * OpenSSL::Digest::RIPEMD160
  * OpenSSL::Digest::SHA

#@since 1.8.3
システムにインストールされている openssl が 0.9.8 以降ならば以下のアルゴリズムも利用できます。
  * OpenSSL::Digest::SHA224
  * OpenSSL::Digest::SHA256
  * OpenSSL::Digest::SHA384
  * OpenSSL::Digest::SHA512
#@end


== Class Methods

--- digest(name, str)
#@todo

name で与えられたハッシュアルゴリズムで与えられた文字列 str に対するハッシュ値を文字列で返します。

--- hexdigest(name, str)
#@todo

name で与えられたハッシュアルゴリズムで与えられた文字列 str に対するハッシュ値を、ASCIIコードを使って 16進数の列を示す文字列にエンコードして返します。

--- new(name)
#@todo

オブジェクトを生成します。name でハッシュアルゴリズムを指定します。


== Instance Methods

--- reset
#@todo

いままで入力された文字列をリセットします。

--- digest
#@todo

ハッシュ値を計算して文字列を返します。

--- hexdigest
--- inspect
--- to_s
#@todo

文字列に対するハッシュ値を、ASCII コードを使って 16 進数の列を示す文字列にエンコードして返します。

--- update(str)
--- <<(str)
#@todo

文字列を追加します。複数回 update を呼ぶことは文字列を連結して update を呼ぶことと同じです。

--- ==(digest)
#@todo

与えられた Digest オブジェクトと等しいかどうか。

--- name
#@todo

ハッシュアルゴリズムを返す。

--- size
#@todo

digest で返す文字列のバイト長。


#@else
= class OpenSSL::Digest::Digest < OpenSSL::Digest
このクラスは互換性のために存在します。

[[c:OpenSSL::Digest]] を代わりに利用してください。

== Class Methods
--- new(*args) -> OpenSSL::Digest::Digest
互換性のためのメソッドです。

[[m:OpenSSL::Digest.new]] で返されるオブジェクトと同じ働きをする
オブジェクトを返します。

@param args [[m:OpenSSL::Digest.new]] に渡すものと同じ引数を渡します

#@end