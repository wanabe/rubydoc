= class RDoc::TopLevel < RDoc::Context

最上位のコンテキスト(ソースファイル)を表現するクラスです。

== Class Methods

--- all_classes_and_modules

Returns all classes and modules discovered by RDoc

--- find_class_named(name)

Finds the class with +name+ in all discovered classes

--- new(file_name) -> RDoc::TopLevel

自身を初期化します。

@param file_name ファイル名を文字列で指定します。

--- reset -> ()

RDoc が収集した [[c:RDoc::TopLevel]] の情報(クラス、モジュール、ファイ
ル)をクリアします。

== Instance Methods

--- add_class_or_module(collection, class_type, name, superclass)

Adding a class or module to a TopLevel is special, as we only
want one copy of a particular top-level class. For example, if
both file A and file B implement class C, we only want one ClassModule
object for C. This code arranges to share classes and modules
between files.

--- find_class_or_module_named(symbol)

#@todo

--- find_local_symbol(symbol)

Finds a class or module named +symbol+

--- find_module_named(name)

Finds a module or class with +name+

#@since 1.9.2
--- full_name -> String

自身が管理するファイルの名前を返します。
#@else
--- full_name -> nil

常に nil を返します。
#@end

--- file_stat -> File::Stat

自身が管理するファイルに関する [[c:File::Stat]] オブジェクトを返します。

--- file_stat=(val)

自身が管理するファイルに関する [[c:File::Stat]] オブジェクトを設定しま
す。

@param val [[c:File::Stat]] オブジェクトを指定します。

--- file_relative_name

Relative name of this file

--- file_relative_name=(val)

#@todo

--- file_absolute_name

Absolute name of this file

--- file_absolute_name=(val)

#@todo
